
import Home from '../views/Home';
import Auth from '../views/auth';
import Dashboard from '../views/dashboard/index';
import Vehicle from '../views/vehicle';
import Penalty from '../views/penalty';
import Users from '../views/users';
import Profile from '../views/profile';
import FormContainer from '../views/form_container';
import AutoGeneratedForm from '../views/auto_generate_page';
import AutoGenerateTable from '../views/auto_generate_table';
import { formTypes } from '../../utils/constants'
import { Navigate } from 'react-router';
import PageNotFound from '../views/page_not_found';
import VerifyEmail from '../views/verify_email';


const loggedInHandler = (verified, email)=> {
    if(parseInt(verified) === 1) {
        return (<Home />)
    }else if(parseInt(verified) === 0) {
        return (<Navigate to={"/auth/verify-email/"+email} />)
    }else {
        return (<Navigate to={"/auth/login"} />)
    }
}



export const routes = (isLoggedIn, verified, email) => [

    {
     
        path: '/',
        element : isLoggedIn?loggedInHandler(verified, email):<Navigate to="/auth/login" />,
        children: [

            
            {path: '/', element: <Navigate to="/ana-sayfa" replace /> },
            {path: '/ana-sayfa', element: <Dashboard />},
            {path: '/arac', element: <Vehicle />},
            {path: '/ceza', element: <Penalty />},
            {path: '/personel', element: <Users />},
            {path: '/profil/:id', element: <Profile />},
            {path: '/arac-ekle', element: <FormContainer isForm={true} formType={ formTypes.newVehicle } />},
            {path: '/personel-ekle', element: <FormContainer isForm={true} formType={ formTypes.newUser } />},
            {path: '/ceza-ekle', element: <FormContainer  formType={ formTypes.newPenalty } />},
            {path: '/yazdir', element: <FormContainer  formType={ formTypes.newPrint } />},
            {path: '/otomatik/veri/:menu_id', element: <AutoGenerateTable />},
            {path: '/kategori/veri', element: <FormContainer  formType={ formTypes.newAutoGeneratedForm } />},
            {path: '/otomatik/form/:page_type', element: <AutoGeneratedForm formType={ formTypes.autoGenerateForm } />},
            { path: '*', element: <Navigate to="404" replace /> },
        ]
        
    },
    {
     
        path: 'auth',
        element : <Auth />,
        children: [

            {path: 'auth', element: <Navigate to="/auth/login" replace /> },
            {path: 'login', element: <FormContainer formType={ formTypes.login } />},
            {path: 'signup', element: <FormContainer formType={ formTypes.signUp } />},
            {path: 'forgot-password', element: <FormContainer formType={ formTypes.forgotPassword } />},
            {path: 'new-password/:token', element: <FormContainer formType={ formTypes.newPassword } />},
            {path: 'verify-email/:email', element: <VerifyEmail />},
            // {path: '/forgot-password', element: <Dashboard />},
            { path: '*', element: <Navigate to="/404" replace /> },
        ]
        
    },
    {
        path: '404',
        element : <PageNotFound />,
        children: [ 
            { path: '*', element: <Navigate to="/404" replace /> },
        ]
    },
    { path: '*', element: <Navigate to="404" replace /> },

];